name: Windows Qt5 CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '**'
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/actions/**"
      - ".github/workflows/Android-Qt5.yml"
      - ".github/workflows/Android-Qt6.yml"
      - ".github/workflows/iOS-Qt5.yml"
      - ".github/workflows/iOS-Qt6.yml"
      - ".github/workflows/Linux-Qt5.yml"
      - ".github/workflows/Linux-Qt6.yml"
      - ".github/workflows/macOS-Qt5.yml"
      - ".github/workflows/macOS-Qt6.yml"
      - ".github/workflows/Windows-Qt6.yml"

  pull_request:
    branches:
      - main
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/actions/**"
      - ".github/workflows/Android-Qt5.yml"
      - ".github/workflows/Android-Qt6.yml"
      - ".github/workflows/iOS-Qt5.yml"
      - ".github/workflows/iOS-Qt6.yml"
      - ".github/workflows/Linux-Qt5.yml"
      - ".github/workflows/Linux-Qt6.yml"
      - ".github/workflows/macOS-Qt5.yml"
      - ".github/workflows/macOS-Qt6.yml"
      - ".github/workflows/Windows-Qt6.yml"

concurrency:
  # cancel jobs on PRs only
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 5.15.2
  CCACHE_CONFIGPATH: C:/Users/runneradmin/AppData/Roaming/ccache/ccache.conf

jobs:
  build-core:
    name: "Build maplibre-gl-native for ${{ matrix.config.qtarch }} (${{ matrix.config.build }})"
    runs-on: windows-2022
    strategy:
      matrix:
        config:
          - arch: win64_msvc2019_64
            qtarch: msvc2019_64
            compiler: x64
            compiler_version: 14.29
            tools: ''
            build: Release
          - arch: win64_msvc2019_64
            qtarch: msvc2019_64
            compiler: x64
            compiler_version: 14.29
            tools: ''
            build: Debug
          - arch: win64_mingw81
            qtarch: mingw81_64
            compiler: mingw810_64
            compiler_version: 8.10.0
            tools: tools_mingw,qt.tools.win64_mingw810
            build: Release
          - arch: win64_mingw81
            qtarch: mingw81_64
            compiler: mingw810_64
            compiler_version: 8.10.0
            tools: tools_mingw,qt.tools.win64_mingw810
            build: Debug

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          fetch-depth: 0

      - name: Setup submodules
        shell: bash
        run: |
          cd source
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1 || true

      - name: Download Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==2.1.*'
          version: ${{ env.QT_VERSION }}
          target: desktop
          arch: ${{ matrix.config.arch }}
          tools: ${{ matrix.config.tools }}

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Setup MSVC
        if: matrix.config.arch == 'win64_msvc2019_64'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.config.compiler }}
          toolset: ${{ matrix.config.compiler_version }}

      - name: Update ccache
        run: |
          choco upgrade ccache
          ccache --version

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: Windows_${{ matrix.config.qtarch }}_${{ matrix.config.build }}

      - name: Build maplibre-gl-native
        shell: bash
        env:
          BUILD_TYPE: ${{ matrix.config.build }}
          COMPILER_TYPE: ${{ matrix.config.compiler }}
        run: |
          export PATH=$IQTA_TOOLS/$COMPILER_TYPE/bin:$PATH
          echo "$PATH"
          mkdir build && cd build
          cmake.exe ../source/dependencies/maplibre-gl-native \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="$BUILD_TYPE" \
            -DCMAKE_C_COMPILER_LAUNCHER="ccache.exe" \
            -DCMAKE_CXX_COMPILER_LAUNCHER="ccache.exe" \
            -DCMAKE_INSTALL_PREFIX="../install-qmaplibregl" \
            -DMBGL_WITH_QT=ON \
            -DMBGL_QT_LIBRARY_ONLY=ON \
            -DMBGL_QT_STATIC=ON
          ninja.exe
          ninja.exe install

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: maplibre-gl-native_Windows_${{ matrix.config.qtarch }}_${{ matrix.config.build }}
          path: install-qmaplibregl

  prepare-core:
    name: "Prepare maplibre-gl-native"
    runs-on: windows-latest
    needs: build-core
    strategy:
      matrix:
        config:
          - qtarch: msvc2019_64
          - qtarch: mingw81_64

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: maplibre-gl-native_Windows_${{ matrix.config.qtarch }}_Release
          path: install-Release

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: maplibre-gl-native_Windows_${{ matrix.config.qtarch }}_Debug
          path: install-Debug

      - name: Prepare artifacts
        run: |
          cp -r install-Release install-qmaplibregl
          cp -r install-Debug/lib/* install-qmaplibregl/lib
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: maplibre-gl-native_Windows_${{ matrix.config.qtarch }}
          path: install-qmaplibregl

  build-plugin:
    name: "Build qt-geoservices-maplibre-gl for ${{ matrix.config.qtarch }}"
    runs-on: windows-latest
    needs: prepare-core
    strategy:
      matrix:
        config:
          - arch: win64_msvc2019_64
            qtarch: msvc2019_64
            compiler: x64
            compiler_version: 14.29
            tools: ''
          - arch: win64_mingw81
            qtarch: mingw81_64
            compiler: mingw810_64
            compiler_version: 8.10.0
            tools: tools_mingw,qt.tools.win64_mingw810

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          fetch-depth: 0

      - name: Download Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==2.1.*'
          version: ${{ env.QT_VERSION }}
          target: desktop
          arch: ${{ matrix.config.arch }}
          tools: ${{ matrix.config.tools }}

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Setup MSVC
        if: matrix.config.arch == 'win64_msvc2019_64'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.config.compiler }}
          toolset: ${{ matrix.config.compiler_version }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: maplibre-gl-native_Windows_${{ matrix.config.qtarch }}
          path: install-qmaplibregl

      - name: Build qt-geoservices-maplibre-gl (MSVC)
        if: matrix.config.arch == 'win64_msvc2019_64'
        run: |
          mkdir build
          mkdir install
          cd build
          qmake ../source QMAPLIBREGL_PATH=../install-qmaplibregl
          nmake
          $env:INSTALL_ROOT = "..\install"
          nmake install

      - name: Build qt-geoservices-maplibre-gl (MinGW)
        if: matrix.config.arch == 'win64_mingw81'
        shell: bash
        env:
          COMPILER_TYPE: ${{ matrix.config.compiler }}
        run: |
          export PATH=$IQTA_TOOLS/$COMPILER_TYPE/bin:$PATH
          echo "$PATH"
          mkdir install
          mkdir build && cd build
          qmake.exe ../source QMAPLIBREGL_PATH=../install-qmaplibregl
          mingw32-make.exe
          INSTALL_ROOT=../install mingw32-make.exe install

      - name: Create artifacts
        shell: bash
        env:
          TAG_ARCH: ${{ matrix.config.qtarch }}
        run: |
          pushd install/a/qt-geoservices-maplibre-gl
          tar cjvf ../../../qt-geoservices-maplibre-gl_Windows_${TAG_ARCH}.tar.bz2 Qt
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: qt-geoservices-maplibre-gl_Windows_${{ matrix.config.qtarch }}
          path: qt-geoservices-maplibre-gl_Windows_${{ matrix.config.qtarch }}.tar.bz2

  release:
    name: "Release qt-geoservices-maplibre-gl"
    if: github.ref_type == 'tag'
    runs-on: windows-2022
    needs: build-plugin
    strategy:
      matrix:
        config:
          - qtarch: msvc2019_64
            outarch: msvc2019
          - qtarch: mingw81_64
            outarch: mingw
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: qt-geoservices-maplibre-gl_Windows_${{ matrix.config.qtarch }}

    - name: Make tarball
      shell: bash
      env:
        TAG_NAME: ${{ github.ref_name }}
        QT_ARCH: ${{ matrix.config.qtarch }}
        TAG_ARCH: ${{ matrix.config.outarch }}
      run: |
        mv qt-geoservices-maplibre-gl_Windows_${QT_ARCH}.tar.bz2 qt-geoservices-maplibre-gl_${TAG_NAME}_Qt${QT_VERSION}_win64_${TAG_ARCH}.tar.bz2

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: qt-geoservices-maplibre-gl_${{ github.ref_name }}_Qt${{ env.QT_VERSION }}_win64_${{ matrix.config.outarch }}.tar.bz2
        allowUpdates: true
        draft: true
