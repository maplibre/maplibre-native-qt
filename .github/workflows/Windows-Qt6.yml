name: Windows Qt6 CI

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #   tags:
  #     - '**'
  #   paths-ignore:
  #     - ".gitignore"
  #     - "README.md"
  #     # ignore CI for other platforms
  #     - ".github/FUNDING.yml"
  #     - ".github/actions/**"
  #     - ".github/workflows/Android-Qt5.yml"
  #     - ".github/workflows/Android-Qt6.yml"
  #     - ".github/workflows/iOS-Qt5.yml"
  #     - ".github/workflows/iOS-Qt6.yml"
  #     - ".github/workflows/Linux-Qt5.yml"
  #     - ".github/workflows/Linux-Qt6.yml"
  #     - ".github/workflows/macOS-Qt5.yml"
  #     - ".github/workflows/macOS-Qt6.yml"
  #     - ".github/workflows/Windows-Qt5.yml"

  # pull_request:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - ".gitignore"
  #     - "README.md"
  #     # ignore CI for other platforms
  #     - ".github/FUNDING.yml"
  #     - ".github/actions/**"
  #     - ".github/workflows/Android-Qt5.yml"
  #     - ".github/workflows/Android-Qt6.yml"
  #     - ".github/workflows/iOS-Qt5.yml"
  #     - ".github/workflows/iOS-Qt6.yml"
  #     - ".github/workflows/Linux-Qt5.yml"
  #     - ".github/workflows/Linux-Qt6.yml"
  #     - ".github/workflows/macOS-Qt5.yml"
  #     - ".github/workflows/macOS-Qt6.yml"
  #     - ".github/workflows/Windows-Qt5.yml"

concurrency:
  # cancel jobs on PRs only
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  QT_VERSION: 6.5.0
  CCACHE_CONFIGPATH: C:/Users/runneradmin/AppData/Roaming/ccache/ccache.conf

jobs:
  build-plugin:
    name: "Build qt-geoservices-maplibre-gl for ${{ matrix.config.qtarch }}"
    runs-on: windows-2022
    strategy:
      matrix:
        config:
          - arch: win64_msvc2019_64
            qtarch: msvc2019_64
            compiler: x64
            compiler_version: 14.29
            tools: ''
          - arch: win64_mingw
            qtarch: mingw_64
            compiler: mingw1120_64
            compiler_version: 11.2.0
            tools: tools_mingw90

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: source
          fetch-depth: 0

      - name: Setup submodules
        shell: bash
        run: |
          cd source
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1 || true

      - name: Download Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==2.1.*'
          version: ${{ env.QT_VERSION }}
          target: desktop
          arch: ${{ matrix.config.arch }}
          modules: qtlocation qtpositioning qtshadertools
          tools: ${{ matrix.config.tools }}

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Setup MSVC
        if: matrix.config.arch == 'win64_msvc2019_64'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.config.compiler }}
          toolset: ${{ matrix.config.compiler_version }}

      - name: Update ccache
        run: |
          choco upgrade ccache
          ccache --version

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: Windows_qt-geoservices-maplibre-gl_${{ matrix.config.qtarch }}
          append-timestamp: false

      - name: Build qt-geoservices-maplibre-gl
        shell: bash
        env:
          COMPILER_TYPE: ${{ matrix.config.compiler }}
        run: |
          export PATH=$IQTA_TOOLS/$COMPILER_TYPE/bin:$PATH
          echo "$PATH"
          mkdir build && cd build
          qt-cmake.bat ../source/ \
            -G"Ninja Multi-Config" \
            -DCMAKE_CONFIGURATION_TYPES="Release;Debug" \
            -DCMAKE_C_COMPILER_LAUNCHER="ccache.exe" \
            -DCMAKE_CXX_COMPILER_LAUNCHER="ccache.exe" \
            -DQT_USE_CCACHE=ON
          ninja.exe
          DESTDIR=../install ninja.exe install

      - name: Create artifacts
        shell: bash
        env:
          TAG_ARCH: ${{ matrix.config.qtarch }}
        run: |
          pushd install/a/maplibre-native-qt
          tar cjvf ../../../qt-geoservices-maplibre-gl_Windows_${TAG_ARCH}.tar.bz2 Qt
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: qt-geoservices-maplibre-gl_Windows_${{ matrix.config.qtarch }}
          path: qt-geoservices-maplibre-gl_Windows_${{ matrix.config.qtarch }}.tar.bz2

  release:
    name: "Release qt-geoservices-maplibre-gl"
    if: github.ref_type == 'tag'
    runs-on: windows-2022
    needs: build-plugin
    strategy:
      matrix:
        config:
          - qtarch: msvc2019_64
            outarch: msvc2019
          - qtarch: mingw_64
            outarch: mingw
    permissions:
      contents: write

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: qt-geoservices-maplibre-gl_Windows_${{ matrix.config.qtarch }}

    - name: Make tarball
      shell: bash
      env:
        TAG_NAME: ${{ github.ref_name }}
        QT_ARCH: ${{ matrix.config.qtarch }}
        TAG_ARCH: ${{ matrix.config.outarch }}
      run: |
        tar xvf qt-geoservices-maplibre-gl_Windows_${QT_ARCH}.tar.bz2
        tar cjvf qt-geoservices-maplibre-gl_${TAG_NAME}_Qt${QT_VERSION}_win64_${TAG_ARCH}.tar.bz2 Qt

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: qt-geoservices-maplibre-gl_${{ github.ref_name }}_Qt${{ env.QT_VERSION }}_win64_${{ matrix.config.outarch }}.tar.bz2
        allowUpdates: true
        draft: true
