name: macOS CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "**"
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/actions/**"
      - ".github/workflows/Android.yml"
      - ".github/workflows/iOS.yml"
      - ".github/workflows/Linux.yml"
      - ".github/workflows/Linux-Test.yml"
      - ".github/workflows/Windows.yml"

  pull_request:
    branches:
      - main
    paths-ignore:
      - ".gitignore"
      - "README.md"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/actions/**"
      - ".github/workflows/Android.yml"
      - ".github/workflows/iOS.yml"
      - ".github/workflows/Linux.yml"
      - ".github/workflows/Linux-Test.yml"
      - ".github/workflows/Windows.yml"

concurrency:
  # cancel jobs on PRs only
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-and-test:
    name: Build QMapLibre (Qt ${{ matrix.qt_version}})
    runs-on: macos-13
    strategy:
      matrix:
        include:
          - qt_series: 5
            qt_version: 5.15.2
            qt_modules: ""
          - qt_series: 6
            qt_version: 6.5.3
            qt_modules: qtlocation qtpositioning

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Download Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: ==3.1.*
          version: ${{ matrix.qt_version }}
          target: desktop
          modules: ${{ matrix.qt_modules }}

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: macOS_QMapLibre_${{ matrix.qt_version }}
          append-timestamp: false

      - name: Build QMapLibre (Qt5)
        if: matrix.qt_series == 5
        run: |
          mkdir build && cd build
          cmake ../source/ \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
            -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_INSTALL_PREFIX="../install" \
            -DCMAKE_OSX_DEPLOYMENT_TARGET="10.13"
          ninja
          ninja test
          ninja install

      - name: Build QMapLibre (Qt 6)
        if: matrix.qt_series == 6
        run: |
          mkdir build && cd build
          qt-cmake ../source/ \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
            -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_INSTALL_PREFIX="../install" \
            -DCMAKE_OSX_DEPLOYMENT_TARGET="11.0" \
            -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
          ninja
          ninja test
          ninja install

      - name: Build QtQuick Example (Qt 6)
        if: matrix.qt_series == 6
        run: |
          export PREFIX_PATH="$(pwd)/install"
          mkdir build-example-quick && cd build-example-quick
          qt-cmake ../source/examples/quick/ \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
            -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_OSX_DEPLOYMENT_TARGET="11.0" \
            -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
            -DCMAKE_PREFIX_PATH="$PREFIX_PATH"
          ninja
          ninja deploy

      - name: Build QtWidgets Example (Qt 6)
        if: matrix.qt_series == 6
        run: |
          export PREFIX_PATH="$(pwd)/install"
          mkdir build-example-widgets && cd build-example-widgets
          qt-cmake ../source/examples/widgets/ \
            -G Ninja \
            -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
            -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
            -DCMAKE_OSX_DEPLOYMENT_TARGET="11.0" \
            -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" \
            -DCMAKE_PREFIX_PATH="$PREFIX_PATH"
          ninja
          ninja deploy

      - name: Compress installation
        run: |
          pushd install
          tar cjvf ../QMapLibre_macOS.tar.bz2 *
          popd

      - name: Compress examples
        if: matrix.qt_series == 6
        run: |
          mkdir examples && pushd examples
          cp -a ../build-example-quick/QMapLibreExampleQuick.app .
          cp -a ../build-example-widgets/QMapLibreExampleWidgets.app .
          tar cjvf ../QMapLibre_macOS_examples.tar.bz2 *
          popd

      - name: Upload installation
        uses: actions/upload-artifact@v3
        with:
          name: QMapLibre_macOS_${{ matrix.qt_version }}
          path: QMapLibre_macOS.tar.bz2

      - name: Upload examples
        if: matrix.qt_series == 6
        uses: actions/upload-artifact@v3
        with:
          name: QMapLibre_macOS_${{ matrix.qt_version }}_examples
          path: QMapLibre_macOS_examples.tar.bz2

  release:
    name: Release QMapLibre
    if: github.ref_type == 'tag'
    runs-on: macos-13
    needs: build-and-test
    permissions:
      contents: write
    strategy:
      matrix:
        qt_version: [5.15.2, 6.5.3]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: QMapLibre_macOS_${{ matrix.qt_version }}

      - name: Make tarball
        env:
          TAG_NAME: ${{ github.ref_name }}
          QT_VERSION: ${{ matrix.qt_version }}
        run: |
          mv QMapLibre_macOS.tar.bz2 QMapLibre_${TAG_NAME}_Qt${QT_VERSION}_macOS.tar.bz2

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: QMapLibre_${{ github.ref_name }}_Qt${{ matrix.qt_version }}_macOS.tar.bz2
          allowUpdates: true
          draft: true
