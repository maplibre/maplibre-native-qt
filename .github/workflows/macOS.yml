name: macOS CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "**"
    paths-ignore:
      - ".gitignore"
      - "README.md"
      - "docs/**"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/actions/**"
      - ".github/workflows/Android.yml"
      - ".github/workflows/CI-cache-cleanup.yml"
      - ".github/workflows/docs-test.yml"
      - ".github/workflows/gh-pages-docs.yml"
      - ".github/workflows/iOS.yml"
      - ".github/workflows/Linux.yml"
      - ".github/workflows/source-tarball.yml"
      - ".github/workflows/Windows.yml"
      - ".github/workflows/WASM.yml"
      - "cmake/presets/Android.json"
      - "cmake/presets/iOS.json"
      - "cmake/presets/Linux.json"
      - "cmake/presets/WASM.json"
      - "cmake/presets/Windows.json"

  pull_request:
    branches:
      - main
    paths-ignore:
      - ".gitignore"
      - "README.md"
      - "docs/**"
      # ignore CI for other platforms
      - ".github/FUNDING.yml"
      - ".github/actions/**"
      - ".github/workflows/Android.yml"
      - ".github/workflows/CI-cache-cleanup.yml"
      - ".github/workflows/docs-test.yml"
      - ".github/workflows/gh-pages-docs.yml"
      - ".github/workflows/iOS.yml"
      - ".github/workflows/Linux.yml"
      - ".github/workflows/source-tarball.yml"
      - ".github/workflows/Windows.yml"
      - ".github/workflows/WASM.yml"
      - "cmake/presets/Android.json"
      - "cmake/presets/iOS.json"
      - "cmake/presets/Linux.json"
      - "cmake/presets/WASM.json"
      - "cmake/presets/Windows.json"

concurrency:
  # cancel jobs on PRs only
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  id-token: write # needed for AWS

jobs:
  build-and-test:
    name: Build (Qt${{ matrix.qt_version}}, ${{ matrix.compiler }})
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        include:
          - qt_version: 6.9.3
            qt_modules: qtlocation qtpositioning
            preset: macOS-sccache
            compiler: default
            runs_on: macos-15
          - qt_version: 6.10.0
            qt_modules: qtlocation qtpositioning
            preset: macOS-sccache
            compiler: default
            runs_on: macos-15
          - qt_version: 6.10.0
            preset: macOS-sccache
            compiler: static
            runs_on: macos-15
          - qt_version: 6.10.0
            qt_modules: qtlocation qtpositioning
            preset: macOS-clang-tidy
            compiler: llvm
            runs_on: macos-15

    env:
      COMPILER: ${{ matrix.compiler }}
      PRESET: ${{ matrix.preset }}
      QT_VERSION: ${{ matrix.qt_version }}

    steps:
      - name: Configure AWS Credentials
        if: vars.OIDC_AWS_ROLE_TO_ASSUME
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: us-west-2
          role-to-assume: ${{ vars.OIDC_AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.run_id }}

      - name: Install sccache
        run: |
          brew install sccache

      - name: Set up sccache
        run: |
          {
            echo "SCCACHE_BUCKET=maplibre-native-sccache"
            echo "SCCACHE_REGION=eu-central-1"
            echo "SCCACHE_CACHE_MULTIARCH=1"
          } >> "$GITHUB_ENV"
          if [ -z "${AWS_SECRET_ACCESS_KEY}" ]; then
            echo "AWS_SECRET_ACCESS_KEY not set; not uploading sccache cache to S3"
            echo "SCCACHE_S3_NO_CREDENTIALS=1" >> "$GITHUB_ENV"
          fi

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Download Qt
        if: matrix.compiler != 'static'
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: ==3.3.*
          version: ${{ matrix.qt_version }}
          target: desktop
          modules: ${{ matrix.qt_modules }}

      - name: Download Static Qt
        if: matrix.compiler == 'static'
        run: |
          cd ..
          wget https://github.com/ntadej/qt-build/releases/download/v${QT_VERSION}.0/Qt_macOS_static.tar.bz2
          tar xvf Qt_macOS_static.tar.bz2
          echo "QT_ROOT_DIR=$PWD/Qt/$QT_VERSION/macos_static" >> $GITHUB_ENV
          echo "$PWD/Qt/$QT_VERSION/macos_static/bin" >> $GITHUB_PATH
          cd $GITHUB_WORKSPACE

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: 3.30.x

      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@v6

      - name: Setup compiler
        if: matrix.compiler != 'default' && matrix.compiler != 'static'
        run: |
          brew install "$COMPILER"
          echo "/opt/homebrew/opt/${COMPILER}/bin" >> "$GITHUB_PATH"
          {
            echo "CC=/opt/homebrew/opt/${COMPILER}/bin/clang"
            echo "CXX=/opt/homebrew/opt/${COMPILER}/bin/clang++"
            echo "LDFLAGS=-L/opt/homebrew/opt/${COMPILER}/lib -L/opt/homebrew/opt/llvm/lib/c++ -L/opt/homebrew/opt/llvm/lib/unwind -lunwind"
            echo "CPPFLAGS=-I/opt/homebrew/opt/${COMPILER}/include"
          } >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@v5
        with:
          path: source
          submodules: recursive
          fetch-depth: 0

      - name: Build
        working-directory: source
        run: |
          cmake --workflow --preset ${PRESET}

      - name: Install
        if: matrix.compiler == 'default'
        run: |
          mkdir install && cd install
          tar xf ../build/qt6-macOS/maplibre-native-qt_*.tar.bz2
          mv maplibre-native-qt_* maplibre-native-qt

      - name: Build QtQuick Example
        if: matrix.compiler == 'default'
        working-directory: source/examples/quick
        run: |
          export QMapLibre_DIR="$GITHUB_WORKSPACE/install/maplibre-native-qt"
          cmake --workflow --preset default

      - name: Build QtQuick Standalone Example
        if: matrix.compiler == 'default'
        working-directory: source/examples/quick-standalone
        run: |
          export QMapLibre_DIR="$GITHUB_WORKSPACE/install/maplibre-native-qt"
          cmake --workflow --preset default

      - name: Build QtWidgets Example
        if: matrix.compiler == 'default'
        working-directory: source/examples/widgets
        run: |
          export QMapLibre_DIR="$GITHUB_WORKSPACE/install/maplibre-native-qt"
          cmake --workflow --preset default

      - name: Show sccache stats
        run: sccache --show-stats

      - name: Upload installation
        if: matrix.compiler == 'default' || matrix.compiler == 'static'
        uses: actions/upload-artifact@v5
        with:
          name: macOS_${{ matrix.qt_version }}_${{ matrix.compiler }}
          path: build/qt6-macOS/maplibre-native-qt_*.tar.bz2

      - name: Upload examples
        if: matrix.compiler == 'default'
        uses: actions/upload-artifact@v5
        with:
          name: macOS_${{ matrix.qt_version }}_examples
          path: build/qt6-example-*/*.tar.bz2

  release:
    name: Release
    if: github.ref_type == 'tag'
    runs-on: macos-15
    needs: build-and-test
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - qt_version: 6.9.3
            compiler: default
            suffix: Metal
          - qt_version: 6.10.0
            compiler: default
            suffix: Metal
          - qt_version: 6.10.0
            compiler: static
            suffix: Metal_static

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: macOS_${{ matrix.qt_version }}_${{ matrix.compiler }}

      - name: Rename artifacts
        if: matrix.compiler != 'default'
        env:
          QT_VERSION: ${{ matrix.qt_version }}
          TAG_NAME: ${{ github.ref_name }}
          PLATFORM_SUFFIX: ${{ matrix.suffix }}
        run: |
          mv maplibre-native-qt_${TAG_NAME}_Qt${QT_VERSION}_macOS_Metal.tar.bz2 maplibre-native-qt_${TAG_NAME}_Qt${QT_VERSION}_macOS_${PLATFORM_SUFFIX}.tar.bz2

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: maplibre-native-qt_${{ github.ref_name }}_Qt${{ matrix.qt_version }}_macOS_${{ matrix.suffix }}.tar.bz2
          allowUpdates: true
          draft: true
